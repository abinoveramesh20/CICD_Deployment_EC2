name: Deploy React App to EC2

on:
  push:
    branches:
      - main  # Deploys when code is pushed to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Ensure this matches your React app's Node.js version

    # Install dependencies and build the app
    - name: Install Dependencies
      run: |
        npm install
        npm run build  # Adjust this if you're using yarn

    # Deploy the build folder to EC2
    - name: Deploy to EC2
      uses: appleboy/scp-action@v0.2.1
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        source: build/  # The React build folder
        target: /var/www/html/  # Replace with your EC2 app's target directory


EXAMPLE:

name: Laxce-Dex-development

on:
  push:
    branches:
      - development

jobs:
  Laxce-Dex:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Adjust based on your project needs

    # Install dependencies and build the project
    - name: Install and Build
      env:
        REACT_APP_INFURA_KEY: ${{ secrets.REACT_APP_INFURA_KEY }}
        REACT_APP_SOCKET_URL: ${{ secrets.REACT_APP_SOCKET_URL }}
      run: |
        npm install --legacy-peer-deps
        npm run build

    # Optional: VPN connection (uncomment if required)
    # - name: Establish VPN connection
    #   run: |
    #       sudo apt update
    #       sudo apt install -y openvpn openvpn-systemd-resolved
    #       echo "${{ secrets.VPN_CONFIG_1 }}" > vpn-config-1.ovpn
    #       echo "${{ secrets.VPN_USERNAME_1 }}" > vpn-credentials-1.txt
    #       echo "${{ secrets.VPN_PASSWORD_1 }}" >> vpn-credentials-1.txt
    #       sudo openvpn --config vpn-config-1.ovpn --auth-user-pass vpn-credentials-1.txt --daemon
    #       sleep 15

    # Deploy to the LaxceDex Development server
    - name: Deploy to Development Server
      uses: appleboy/scp-action@v0.2.1
      with:
        host: ${{ secrets.SERVER_IP_NEW_UI }}
        username: ${{ secrets.USERNAME_NEW_UI }}
        port: ${{ secrets.SERVER_PORT_NEW_UI }}
        key: ${{ secrets.SERVER_SSH_KEY_NEW_UI }}
        source: "build/*"
        target: ${{ secrets.SERVER_DESTINATION_NEW_DEXUI }}

    # Optional: Kill VPN connection
    # - name: Kill VPN connection
    #   if: always()
    #   run: sudo killall openvpn

