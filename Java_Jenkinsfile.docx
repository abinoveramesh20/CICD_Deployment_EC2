pipeline {
    agent any

    environment {
        // Using Jenkins Secrets for sensitive data
        EC2_SSH_HOST = credentials('EC2_SSH_HOST')  // The EC2 host IP or hostname stored as a secret
        EC2_SSH_USER = 'ubuntu'  // Default SSH user for EC2 instances, adjust if necessary
        EC2_SSH_KEY_PATH = credentials('ec2-ssh-key')  // Path to the SSH private key stored in Jenkins
        REMOTE_DIR = '/home/ubuntu/java-app/'  // Remote directory on EC2 where the app should go
        JAR_FILE = 'target/your-app.jar'  // Path to the built JAR file
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                git 'https://github.com/your-repository/your-java-app.git'
            }
        }

        stage('Build') {
            steps {
                // Build the Java application (assuming Maven is used)
                script {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    // Copy JAR to EC2 instance using SCP (Secure Copy)
                    sh """
                    scp -i ${EC2_SSH_KEY_PATH} ${JAR_FILE} ${EC2_SSH_USER}@${EC2_SSH_HOST}:${REMOTE_DIR}
                    """
                    
                    // Run the application on the EC2 instance using SSH
                    sh """
                    ssh -i ${EC2_SSH_KEY_PATH} ${EC2_SSH_USER}@${EC2_SSH_HOST} 'nohup java -jar ${REMOTE_DIR}/your-app.jar > /dev/null 2>&1 &'
                    """
                }
            }
        }
    }
}
